/* =========================================================
   01  変数定義
   ========================================================= */
:root {
  --primary: #00ff;
  --accent : #ffffff;
  --bg     : #f5f7fb;
  --dark   : #1d1d1d;
  --light  : #ffffff;
  --spacer : clamp(1rem, 2vw, 2rem);
}

/* =========================================================
   02  リセット & ベース
   ========================================================= */
* { margin: 0; padding: 0; box-sizing: border-box; }
html { scroll-behavior: smooth; }
body {/* =========================================================
   01  変数定義
   ========================================================= */
:root {
  --primary: #00ff;
  --accent : #ffffff;
  --bg     : #f5f7fb;
  --dark   : #1d1d1d;
  --light  : #ffffff;
  --spacer : clamp(1rem, 2vw, 2rem);
}

/* =========================================================
   02  リセット & ベース
   ========================================================= */
* { margin: 0; padding: 0; box-sizing: border-box; }
html { scroll-behavior: smooth; }
body {
  font-family: Arial, sans-serif;
  background: var(--bg);
  color: var(--dark);
  line-height: 1.6;
}
h1, h2, h3 { font-weight: 700; }
img { max-width: 100%; display: block; }

/* =========================================================
   03  ヘッダー
   ========================================================= */
header {
  position: fixed; inset: 0 0 auto;
  z-index: 999;
  background: #fff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
.nav-container {
  max-width: 1100px;
  margin: 0 auto;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.logo { color: var(--primary); font-size: 1.25rem; font-weight: 800; }
nav ul { display: flex; gap: var(--spacer); list-style: none; }
nav a { text-decoration: none; color: var(--dark); font-weight: 600; transition: color .2s; }
nav a:hover { color: var(--primary); }

/* ハンバーガー（SP） */
.burger { display: none; cursor: pointer; }
.burger span { display: block; width: 25px; height: 3px; background: #333; margin: 5px 0; }

/* =========================================================
   04  共通セクション
   ========================================================= */
section { padding: calc(var(--spacer) * 3) var(--spacer); max-width: 1100px; margin: 0 auto; }
.two-col { display: flex; gap: var(--spacer); align-items: center; }
.two-col:nth-child(even) { flex-direction: row-reverse; }

/* グリッドカード */
.skill-grid {
  display: grid;
  gap: var(--spacer);
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
}
.card {
  background: var(--light);
  padding: var(--spacer);
  border-radius: 12px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, .05);
  transition: transform .2s;
}
.card:hover { transform: translateY(-4px); }

/* =========================================================
   05  オーバーレイ（画像＋文字）
   ========================================================= */
.overlay {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: var(--light);
  min-height: 70vh;
  background: center / cover no-repeat;
  overflow: hidden;
}
.overlay::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, .55);
  backdrop-filter: grayscale(30%);
}
.overlay-content {
  position: relative;
  z-index: 2;
  max-width: 90%;
  padding: var(--spacer);
}
.overlay h1, .overlay h2 { letter-spacing: .05em; }
.overlay h1 { font-size: clamp(2.5rem, 6vw, 4rem); margin-bottom: 1rem; }
.overlay h2 { font-size: clamp(2rem, 6vw, 3.5rem); margin-bottom: .75rem; }
.overlay p { font-size: 1.15rem; line-height: 1.8; }

/* オーバーレイ内カード／リストの可読性を確保 */
.overlay .skill-grid .card,
.overlay .card {
  background: rgba(255,255,255,.9);
  color: var(--dark);
  box-shadow: 0 4px 6px rgba(0,0,0,.15);
}
.overlay ul { list-style: none; padding: 0; }
.overlay ul li { margin-bottom: .5rem; }

/* 高さバリエーション */
.overlay--md { min-height: 60vh; }
.overlay--sm { min-height: 45vh; }

/* オプション：ゆっくりズーム */
@keyframes zoom { from {transform: scale(1);} to {transform: scale(1.05);} }
.overlay-bgZoom { animation: zoom 20s ease-in-out infinite alternate; }

/* スクリーンリーダーのみ可視 */
.visually-hidden {
  position: absolute !important;
  height: 1px; width: 1px;
  overflow: hidden;
  clip: rect(1px,1px,1px,1px);
  white-space: nowrap;
}

/* =========================================================
   06  フッター
   ========================================================= */
footer {
  background: var(--dark);
  color: var(--light);
  text-align: center;
  padding: 1.5rem var(--spacer);
  margin-top: 3rem;
}

/* =========================================================
   07  レスポンシブ
   ========================================================= */
@media (max-width: 768px) {
  .two-col { flex-direction: column !important; }
  nav ul {
    position: fixed; inset: 0 0 0 30%;
    flex-direction: column;
    background: var(--light);
    padding-top: 4rem;
    translate: 100%;
    transition: translate .3s;
  }
  nav ul.open { translate: 0; }
  .burger { display: block; }
  nav ul { display: none; flex-direction: column; }
  nav ul.open { display: flex; }
  .skill-grid {
    display: flex;
    flex-direction: column; /* カードを縦並びに */
    align-items: center;    /* カードをセンターに配置 */
  }
}

/* =========================================================
   08  カスタムスタイル
   ========================================================= */

/* Hero セクションのテキストカラー */
.hero-blue { 
  color: #00f;
  white-space: nowrap;
}

/* Experience（#timeline）の配置調整 */
#timeline.two-col { flex-direction: row-reverse !important; }
#timeline.two-col > div:first-child { margin-left: var(--spacer); margin-right: 0; }
#timeline.two-col > div:last-child { margin-right: var(--spacer); margin-left: 0; }

/* モバイルでの縦並び */
@media (max-width: 768px) {
  #timeline.two-col {
    flex-direction: column-reverse !important;
  }
  #timeline.two-col > div { margin: 0; }
}

/* About / Experience / Works の画像サイズ調整 */
#about.two-col img,
#timeline.two-col img,
#works.two-col img {
  max-width: 100%;
  height: auto;
  flex: 0 0 100%;
  margin-bottom: var(--spacer);
}

/* =========================================================
   ▼ Skills / Services カードをもっとワイドに
   ========================================================= */

/* 1. グリッド自体を画面幅に合わせて解放 -------------- */
#skills .skill-grid,
#services .skill-grid {
  grid-template-columns: repeat(2, 1fr);
  max-width: 100%;          /* ← これで左右いっぱいに */
  padding-inline: 0vw;      /* ← 画面端から少し余白を取る */
  gap: 3rem;                /* ← カード同士の間隔も広めに（好みで調整）*/
}

/* 2. カードの横幅をセルいっぱいに＆中央寄せ ---------- */
#skills .skill-grid .card,
#services .skill-grid .card {
  grid-template-columns: repeat(2, 1fr);
  width: 100%;              /* ← セル幅と一致させる */
  max-width: none;          /* 念のため制限を解除 */
  margin: 0 auto;
}

@media (max-width: 768px) {
  /* モバイルでは 1 列に戻す */
  #skills .skill-grid,
  #services .skill-grid {
    grid-template-columns: 1fr;
  }
}

/* 2. Contact 背景画像を “少し上に” ずらす & 可読性アップ */
#contact.overlay {
  background-position: center 50%;          /* 0%=最上部, 50%=中央 */
}

#contact .overlay-content {
  max-width: 700px;
  background: rgba(0,0,0,.55);              /* 半透明パネルでリンクを見やすく */
  padding: calc(var(--spacer) * 1.2);
  border-radius: 14px;
}

#contact ul {
  list-style: none;
  padding: 0;
  margin-top: var(--spacer);
}
#contact ul li {
  margin-bottom: .65rem;
}
#contact a {
  color: var(--accent);
  text-decoration: underline;
}
#contact a:hover {
  color: var(--primary);
}

/* 3. カード中央寄せ（2×2 レイアウトで左右バランス調整） */
.overlay .skill-grid .card {
  margin: 0 auto;
  width: 100%;
}

/* 4. “Skills / Services / Contact” の見出し余白を調整 */
#skills h2, #services h2, #contact h2 {
  margin-bottom: calc(var(--spacer) * 1.2);
}

/* =========================================================
   ▼ Experience（#timeline）配置調整
   ========================================================= */

/* ================= Experience: 右に文字・左に画像 ================= */
#timeline.two-col { flex-direction: row-reverse !important; }

#timeline.two-col > div:first-child {  /* テキスト側（右） */
  margin-left:  var(--spacer);
  margin-right: 0;
}
#timeline.two-col > div:last-child {   /* 画像側（左） */
  margin-right: var(--spacer);
  margin-left: 0;
}

/* =========================================================
   ▼ Contact リンク類を左寄せ
   ========================================================= */

#contact .overlay-content {
  text-align: center;                   /* 中央寄せ → 左寄せに */
}

/* 左寄せのまま中央に見せるため、パネル幅をやや絞る */
#contact .overlay-content {
  max-width: 600px;                   /* 好みで調整 */
}

/* 2. リストだけ左寄せに */
#contact ul {
  display: inline-block;       /* ← 中央に配置しつつ内部は左寄せ */
  text-align: left;
  list-style: none;
  padding-left: 0;
  margin-top: 1rem;
}

#contact ul li { margin-bottom: .65rem; }

/* =========================================================
   ▼ About / Experience / Works の画像サイズ調整
   ========================================================= */

/* 共通クラス two-col 内の img を縮小 */
#about.two-col img,
#timeline.two-col img,
#works.two-col img {
  max-width: 100%;      /* ← 画像横幅を本文の約 40% に */
  height: auto;
  flex: 0 0 100%;       /* フレックス比も合わせる */
}

/* テキスト側を広げて読みやすく */
#about.two-col > div:not(:has(img)),
#timeline.two-col > div:not(:has(img)),
#works.two-col > div:not(:has(img)) {
  flex: 1 1 75%;
}

/* モバイル（～768px）は 1 列で表示を崩さない */
@media (max-width: 768px) {
  #about.two-col img,
  #timeline.two-col img,
  #works.two-col img {
    max-width: 100%;
    flex: 0 0 100%;
    margin-bottom: var(--spacer);
  }
}

/* ② styles.css ― 末尾に追記 */
.hero-blue {
  color: #00f; /* 濃いめで映えるブルー */
}

/* ─── 追記：Experience（#timeline）を
          ─ スマホでは「文字→画像」の縦並びにする ───────── */
@media (max-width: 768px) {
  #timeline.two-col {
    flex-direction: column-reverse !important; /* ← 文字上・画像下 */
  }
  #timeline.two-col > div { margin: 0; }        /* 不要な左右マージンをリセット */
}

  font-family: Arial, sans-serif;
  background: var(--bg);
  color: var(--dark);
  line-height: 1.6;
}
h1, h2, h3 { font-weight: 700; }
img { max-width: 100%; display: block; }

/* =========================================================
   03  ヘッダー
   ========================================================= */
header {
  position: fixed; inset: 0 0 auto;
  z-index: 999;
  background: #fff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}
.nav-container {
  max-width: 1100px;
  margin: 0 auto;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.logo { color: var(--primary); font-size: 1.25rem; font-weight: 800; }
nav ul { display: flex; gap: var(--spacer); list-style: none; }
nav a { text-decoration: none; color: var(--dark); font-weight: 600; transition: color .2s; }
nav a:hover { color: var(--primary); }

/* ハンバーガー（SP） */
.burger { display: none; cursor: pointer; }
.burger span { display: block; width: 25px; height: 3px; background: #333; margin: 5px 0; }

/* =========================================================
   04  共通セクション
   ========================================================= */
section { padding: calc(var(--spacer) * 3) var(--spacer); max-width: 1100px; margin: 0 auto; }
.two-col { display: flex; gap: var(--spacer); align-items: center; }
.two-col:nth-child(even) { flex-direction: row-reverse; }

/* グリッドカード */
.skill-grid {
  display: grid;
  gap: var(--spacer);
  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
}
.card {
  background: var(--light);
  padding: var(--spacer);
  border-radius: 12px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, .05);
  transition: transform .2s;
}
.card:hover { transform: translateY(-4px); }

/* =========================================================
   05  オーバーレイ（画像＋文字）
   ========================================================= */
.overlay {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: var(--light);
  min-height: 70vh;
  background: center / cover no-repeat;
  overflow: hidden;
}
.overlay::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, .55);
  backdrop-filter: grayscale(30%);
}
.overlay-content {
  position: relative;
  z-index: 2;
  max-width: 90%;
  padding: var(--spacer);
}
.overlay h1, .overlay h2 { letter-spacing: .05em; }
.overlay h1 { font-size: clamp(2.5rem, 6vw, 4rem); margin-bottom: 1rem; }
.overlay h2 { font-size: clamp(2rem, 6vw, 3.5rem); margin-bottom: .75rem; }
.overlay p { font-size: 1.15rem; line-height: 1.8; }

/* オーバーレイ内カード／リストの可読性を確保 */
.overlay .skill-grid .card,
.overlay .card {
  background: rgba(255,255,255,.9);
  color: var(--dark);
  box-shadow: 0 4px 6px rgba(0,0,0,.15);
}
.overlay ul { list-style: none; padding: 0; }
.overlay ul li { margin-bottom: .5rem; }

/* 高さバリエーション */
.overlay--md { min-height: 60vh; }
.overlay--sm { min-height: 45vh; }

/* オプション：ゆっくりズーム */
@keyframes zoom { from {transform: scale(1);} to {transform: scale(1.05);} }
.overlay-bgZoom { animation: zoom 20s ease-in-out infinite alternate; }

/* スクリーンリーダーのみ可視 */
.visually-hidden {
  position: absolute !important;
  height: 1px; width: 1px;
  overflow: hidden;
  clip: rect(1px,1px,1px,1px);
  white-space: nowrap;
}

/* =========================================================
   06  フッター
   ========================================================= */
footer {
  background: var(--dark);
  color: var(--light);
  text-align: center;
  padding: 1.5rem var(--spacer);
  margin-top: 3rem;
}

/* =========================================================
   07  レスポンシブ
   ========================================================= */
@media (max-width: 768px) {
  .two-col { flex-direction: column !important; }
  nav ul {
    position: fixed; inset: 0 0 0 30%;
    flex-direction: column;
    background: var(--light);
    padding-top: 4rem;
    translate: 100%;
    transition: translate .3s;
  }
  nav ul.open { translate: 0; }
  .burger { display: block; }
  nav ul { display: none; flex-direction: column; }
  nav ul.open { display: flex; }
  .skill-grid {
    display: flex;
    flex-direction: column; /* カードを縦並びに */
    align-items: center;    /* カードをセンターに配置 */
  }
}

/* =========================================================
   08  カスタムスタイル
   ========================================================= */

/* Hero セクションのテキストカラー */
.hero-blue { color: #00f; }

/* Experience（#timeline）の配置調整 */
#timeline.two-col { flex-direction: row-reverse !important; }
#timeline.two-col > div:first-child { margin-left: var(--spacer); margin-right: 0; }
#timeline.two-col > div:last-child { margin-right: var(--spacer); margin-left: 0; }

/* モバイルでの縦並び */
@media (max-width: 768px) {
  #timeline.two-col {
    flex-direction: column-reverse !important;
  }
  #timeline.two-col > div { margin: 0; }
}

/* About / Experience / Works の画像サイズ調整 */
#about.two-col img,
#timeline.two-col img,
#works.two-col img {
  max-width: 100%;
  height: auto;
  flex: 0 0 100%;
  margin-bottom: var(--spacer);
}

/* =========================================================
   ▼ Skills / Services カードをもっとワイドに
   ========================================================= */

/* 1. グリッド自体を画面幅に合わせて解放 -------------- */
#skills .skill-grid,
#services .skill-grid {
  grid-template-columns: repeat(2, 1fr);
  max-width: 100%;          /* ← これで左右いっぱいに */
  padding-inline: 1vw;      /* ← 画面端から少し余白を取る */
  gap: 3rem;                /* ← カード同士の間隔も広めに（好みで調整）*/
}

/* 2. カードの横幅をセルいっぱいに＆中央寄せ ---------- */
#skills .skill-grid .card,
#services .skill-grid .card {
  grid-template-columns: repeat(2, 1fr);
  width: 100%;              /* ← セル幅と一致させる */
  max-width: none;          /* 念のため制限を解除 */
  margin: 0 auto;
}

@media (max-width: 768px) {
  /* モバイルでは 1 列に戻す */
  #skills .skill-grid,
  #services .skill-grid {
    grid-template-columns: 1fr;
  }
}

/* 2. Contact 背景画像を “少し上に” ずらす & 可読性アップ */
#contact.overlay {
  background-position: center 50%;          /* 0%=最上部, 50%=中央 */
}

#contact .overlay-content {
  max-width: 700px;
  background: rgba(0,0,0,.55);              /* 半透明パネルでリンクを見やすく */
  padding: calc(var(--spacer) * 1.2);
  border-radius: 14px;
}

#contact ul {
  list-style: none;
  padding: 0;
  margin-top: var(--spacer);
}
#contact ul li {
  margin-bottom: .65rem;
}
#contact a {
  color: var(--accent);
  text-decoration: underline;
}
#contact a:hover {
  color: var(--primary);
}

/* 3. カード中央寄せ（2×2 レイアウトで左右バランス調整） */
.overlay .skill-grid .card {
  margin: 0 auto;
  width: 100%;
}

/* 4. “Skills / Services / Contact” の見出し余白を調整 */
#skills h2, #services h2, #contact h2 {
  margin-bottom: calc(var(--spacer) * 1.2);
}

/* =========================================================
   ▼ Experience（#timeline）配置調整
   ========================================================= */

/* ================= Experience: 右に文字・左に画像 ================= */
#timeline.two-col { flex-direction: row-reverse !important; }

#timeline.two-col > div:first-child {  /* テキスト側（右） */
  margin-left:  var(--spacer);
  margin-right: 0;
}
#timeline.two-col > div:last-child {   /* 画像側（左） */
  margin-right: var(--spacer);
  margin-left: 0;
}

/* =========================================================
   ▼ Contact リンク類を左寄せ
   ========================================================= */

#contact .overlay-content {
  text-align: center;                   /* 中央寄せ → 左寄せに */
}

/* 左寄せのまま中央に見せるため、パネル幅をやや絞る */
#contact .overlay-content {
  max-width: 600px;                   /* 好みで調整 */
}

/* 2. リストだけ左寄せに */
#contact ul {
  display: inline-block;       /* ← 中央に配置しつつ内部は左寄せ */
  text-align: left;
  list-style: none;
  padding-left: 0;
  margin-top: 1rem;
}

#contact ul li { margin-bottom: .65rem; }

/* =========================================================
   ▼ About / Experience / Works の画像サイズ調整
   ========================================================= */

/* 共通クラス two-col 内の img を縮小 */
#about.two-col img,
#timeline.two-col img,
#works.two-col img {
  max-width: 100%;      /* ← 画像横幅を本文の約 40% に */
  height: auto;
  flex: 0 0 100%;       /* フレックス比も合わせる */
}

/* テキスト側を広げて読みやすく */
#about.two-col > div:not(:has(img)),
#timeline.two-col > div:not(:has(img)),
#works.two-col > div:not(:has(img)) {
  flex: 1 1 75%;
}

/* モバイル（～768px）は 1 列で表示を崩さない */
@media (max-width: 768px) {
  #about.two-col img,
  #timeline.two-col img,
  #works.two-col img {
    max-width: 100%;
    flex: 0 0 100%;
    margin-bottom: var(--spacer);
  }
}

/* ② styles.css ― 末尾に追記 */
.hero-blue {
  color: #00f; /* 濃いめで映えるブルー */
}

/* ─── 追記：Experience（#timeline）を
          ─ スマホでは「文字→画像」の縦並びにする ───────── */
@media (max-width: 768px) {
  #timeline.two-col {
    flex-direction: column-reverse !important; /* ← 文字上・画像下 */
  }
  #timeline.two-col > div { margin: 0; }        /* 不要な左右マージンをリセット */
}
